name: CICD

on:
    push:
        branches:
            - "feat/**"
        tags:
            - "**"

jobs:
    tag:
        if: startsWith(github.ref, 'refs/tags/v')
        name: test
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Get tag
              id: get-tag
              run: |
                  echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
                  echo "::debug::${{ steps.get-tag.outputs.tag }}"

    # deploy:
    #     if: github.event_name == 'push'
    #     name: deploy
    #     runs-on: ubuntu-latest
    #     needs: integration

    #     steps:
    #         - uses: actions/checkout@v2

    #         - name: Configure AWS credentials
    #           uses: aws-actions/configure-aws-credentials@v1
    #           with:
    #               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #               aws-region: ${{ secrets.S3_BUCKET_REGION }}

    #         - name: Install dependencies
    #           run: |
    #               yarn install

    #         - name: Get the branch
    #           id: get-branch
    #           run: |
    #               if [[ ${GITHUB_REF#refs/heads/} == 'master' ]]
    #               then
    #                   _branch='master'
    #               else
    #                   if [[ ${GITHUB_REF#refs/heads/} == 'develop' ]]
    #                   then
    #                       _branch='develop'
    #                   else
    #                       _branch=$(echo ${GITHUB_REF#refs/heads/} | cut -d'/' -f2)
    #                   fi
    #               fi
    #               echo ::set-output name=branch::${_branch,,}

    #         - name: Run build
    #           env:
    #               CI: false
    #           run: |
    #               REACT_APP_BUCKET_NAME=tarp-client-${{ steps.get-branch.outputs.branch }} yarn build

    #         - name: Create bucket
    #           uses: ItsKarma/aws-cli@v1.70.0
    #           with:
    #               args: s3 mb s3://tarp-client-${{ steps.get-branch.outputs.branch }}
    #           continue-on-error: true

    #         - name: Allow public read
    #           uses: ItsKarma/aws-cli@v1.70.0
    #           with:
    #               args: s3api put-bucket-acl --acl public-read --bucket tarp-client-${{ steps.get-branch.outputs.branch }}
    #           continue-on-error: true

    #         - name: Allow public read to all object
    #           uses: ItsKarma/aws-cli@v1.70.0
    #           with:
    #               args: s3api put-bucket-policy --bucket tarp-client-${{ steps.get-branch.outputs.branch }} --policy {\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AllowPublicReadAccess\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":\"s3:GetObject\",\"Resource\":\"arn:aws:s3:::tarp-client-${{ steps.get-branch.outputs.branch }}/*\"}]}
    #           continue-on-error: true

    #         - name: Static web hosting
    #           uses: ItsKarma/aws-cli@v1.70.0
    #           with:
    #               args: s3 website s3://tarp-client-${{ steps.get-branch.outputs.branch }} --index-document index.html --error-document index.html
    #           continue-on-error: true

    #         - name: Deploy
    #           uses: reggionick/s3-deploy@v3
    #           with:
    #               folder: build
    #               bucket: tarp-client-${{ steps.get-branch.outputs.branch }}
    #               bucket-region: ${{ secrets.S3_BUCKET_REGION }}
    #               dist-id: /
    #               invalidation: /
    #               delete-removed: true
    #               no-cache: true
    #               private: true
